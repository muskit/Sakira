[gd_resource type="VisualShader" load_steps=30 format=3 uid="uid://dm5rgp78v61ha"]

[ext_resource type="Texture2D" uid="uid://cmaq66vbi80ug" path="res://_Assets/Textures/Notes/SlideArrow_Texture.png" id="1_cj2ec"]
[ext_resource type="Texture2D" uid="uid://kjoqem41xatr" path="res://_Assets/Textures/Notes/SlideArrow_Mask.png" id="2_p52jd"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_1jpfy"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_3pdfb"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_eesut"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(2, 2, 2, 2)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_2u62d"]
expanded_output_ports = [0]
source = 5
texture = ExtResource("1_cj2ec")

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_nqoll"]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_70igk"]
expanded_output_ports = [0]
source = 5
texture = ExtResource("2_p52jd")

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_d62au"]
output_port_for_preview = 0
default_input_values = [0, 1.0, 1, 0.0]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_8jykx"]
input_name = "uv"

[sub_resource type="VisualShaderNodeMultiplyAdd" id="VisualShaderNodeMultiplyAdd_fd4l7"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(1, 6), 2, Vector2(0, 0)]
op_type = 1

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_o1o8t"]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_81kov"]
default_input_values = [0, Vector2(0, -1), 1, Vector2(0, 0)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_ypqau"]
parameter_name = "arrow"
texture_filter = 2
texture_repeat = 1

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_jbtne"]
default_input_values = [0, 0.0, 1, 1.0]
operator = 2

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_k4kjf"]
parameter_name = "scrollMultiplier"
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_u0ner"]
parameter_name = "ArrowColor"
default_value_enabled = true
default_value = Color(0, 1, 0, 1)

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_l1lmq"]

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_anrqj"]
parameter_name = "mask"
color_default = 2
texture_filter = 4

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_3w723"]
default_input_values = [0, 1.0, 1, 0.0, 2, 0.0]
op_type = 0

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_3hrni"]
parameter_name = "isCwShape"
default_value_enabled = true

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_sy3w3"]
default_input_values = [0, Vector2(0, 0)]
op_type = 0
function = 32

[sub_resource type="VisualShaderNodeSwitch" id="VisualShaderNodeSwitch_si863"]
default_input_values = [0, false, 1, Vector3(1, 1, 1), 2, Vector3(0, 0, 0)]
op_type = 4

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_2lm10"]
parameter_name = "TileMult"
default_value_enabled = true
default_value = 6.0

[sub_resource type="VisualShaderNodeSwitch" id="VisualShaderNodeSwitch_2ma3x"]
default_input_values = [0, false, 1, Quaternion(1, 1, 1, 1), 2, Quaternion(0, 0, 0, 0)]
op_type = 5

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_e28fg"]
constant = Color(1, 0.584314, 0, 1)

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_uf0bo"]
constant = Color(0, 1, 0, 1)

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_13pou"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_p0v4r"]
output_port_for_preview = 0
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform bool isCwShape = false;
uniform float TileMult = 6;
uniform float scrollMultiplier = 1;
uniform sampler2D arrow : filter_linear, repeat_enable;
uniform sampler2D mask : hint_default_transparent, filter_linear_mipmap;



void fragment() {
// BooleanParameter:35
	bool n_out35p0 = isCwShape;


// ColorConstant:40
	vec4 n_out40p0 = vec4(1.000000, 0.584314, 0.000000, 1.000000);


// ColorConstant:41
	vec4 n_out41p0 = vec4(0.000000, 1.000000, 0.000000, 1.000000);


	vec4 n_out39p0;
// Switch:39
	n_out39p0 = mix(n_out41p0, n_out40p0, float(n_out35p0));


// VectorOp:13
	vec4 n_in13p1 = vec4(2.00000, 2.00000, 2.00000, 2.00000);
	vec4 n_out13p0 = n_out39p0 * n_in13p1;


// Input:20
	vec2 n_out20p0 = UV;


// VectorFunc:36
	vec2 n_out36p0 = vec2(1.0) - n_out20p0;


	vec3 n_out37p0;
// Switch:37
	n_out37p0 = mix(vec3(n_out20p0, 0.0), vec3(n_out36p0, 0.0), float(n_out35p0));


// FloatParameter:38
	float n_out38p0 = TileMult;


// VectorCompose:32
	float n_in32p0 = 1.00000;
	vec2 n_out32p0 = vec2(n_in32p0, n_out38p0);


// Input:23
	float n_out23p0 = TIME;


// FloatParameter:28
	float n_out28p0 = scrollMultiplier;


// FloatOp:27
	float n_out27p0 = n_out23p0 * n_out28p0;


// VectorOp:24
	vec2 n_in24p0 = vec2(0.00000, -1.00000);
	vec2 n_out24p0 = n_in24p0 * vec2(n_out27p0);


// MultiplyAdd:22
	vec2 n_out22p0 = fma(vec2(n_out37p0.xy), n_out32p0, n_out24p0);


	vec4 n_out14p0;
// Texture2D:14
	n_out14p0 = texture(arrow, n_out22p0);
	float n_out14p1 = n_out14p0.r;
	float n_out14p2 = n_out14p0.g;
	float n_out14p3 = n_out14p0.b;


// VectorOp:11
	vec4 n_out11p0 = n_out13p0 * vec4(n_out14p1);


// VectorOp:10
	vec4 n_out10p0 = n_out11p0 + n_out39p0;


	vec4 n_out16p0;
// Texture2D:16
	n_out16p0 = texture(mask, vec2(n_out37p0.xy));
	float n_out16p1 = n_out16p0.r;
	float n_out16p2 = n_out16p0.g;
	float n_out16p3 = n_out16p0.b;


// FloatOp:15
	float n_out15p0 = n_out14p1 * n_out16p3;


// VectorOp:7
	vec4 n_out7p0 = n_out10p0 + vec4(n_out15p0);


// Mix:3
	float n_in3p1 = 1.00000;
	float n_out3p0 = mix(n_out14p2, n_in3p1, n_out16p2);


// VectorOp:8
	vec4 n_out8p0 = n_out7p0 * vec4(n_out3p0);


// FloatOp:17
	float n_out17p0 = n_out14p3 * n_out16p1;


// Output:0
	COLOR.rgb = vec3(n_out8p0.xyz);
	COLOR.a = n_out17p0;


}
"
graph_offset = Vector2(-1381.11, -324.544)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(1500, 460)
nodes/fragment/3/node = SubResource("VisualShaderNodeMix_l1lmq")
nodes/fragment/3/position = Vector2(760, 320)
nodes/fragment/7/node = SubResource("VisualShaderNodeVectorOp_13pou")
nodes/fragment/7/position = Vector2(800, 0)
nodes/fragment/8/node = SubResource("VisualShaderNodeVectorOp_p0v4r")
nodes/fragment/8/position = Vector2(1080, 120)
nodes/fragment/10/node = SubResource("VisualShaderNodeVectorOp_1jpfy")
nodes/fragment/10/position = Vector2(560, -80)
nodes/fragment/11/node = SubResource("VisualShaderNodeVectorOp_3pdfb")
nodes/fragment/11/position = Vector2(280, -160)
nodes/fragment/13/node = SubResource("VisualShaderNodeVectorOp_eesut")
nodes/fragment/13/position = Vector2(-20, -260)
nodes/fragment/14/node = SubResource("VisualShaderNodeTexture_2u62d")
nodes/fragment/14/position = Vector2(-60, 120)
nodes/fragment/15/node = SubResource("VisualShaderNodeFloatOp_nqoll")
nodes/fragment/15/position = Vector2(560, 140)
nodes/fragment/16/node = SubResource("VisualShaderNodeTexture_70igk")
nodes/fragment/16/position = Vector2(-60, 520)
nodes/fragment/17/node = SubResource("VisualShaderNodeFloatOp_d62au")
nodes/fragment/17/position = Vector2(540, 620)
nodes/fragment/20/node = SubResource("VisualShaderNodeInput_8jykx")
nodes/fragment/20/position = Vector2(-1760, 60)
nodes/fragment/22/node = SubResource("VisualShaderNodeMultiplyAdd_fd4l7")
nodes/fragment/22/position = Vector2(-680, 260)
nodes/fragment/23/node = SubResource("VisualShaderNodeInput_o1o8t")
nodes/fragment/23/position = Vector2(-1580, 500)
nodes/fragment/24/node = SubResource("VisualShaderNodeVectorOp_81kov")
nodes/fragment/24/position = Vector2(-1000, 480)
nodes/fragment/26/node = SubResource("VisualShaderNodeTexture2DParameter_ypqau")
nodes/fragment/26/position = Vector2(-460, 140)
nodes/fragment/27/node = SubResource("VisualShaderNodeFloatOp_jbtne")
nodes/fragment/27/position = Vector2(-1260, 600)
nodes/fragment/28/node = SubResource("VisualShaderNodeFloatParameter_k4kjf")
nodes/fragment/28/position = Vector2(-1560, 640)
nodes/fragment/29/node = SubResource("VisualShaderNodeColorParameter_u0ner")
nodes/fragment/29/position = Vector2(-380, -260)
nodes/fragment/30/node = SubResource("VisualShaderNodeTexture2DParameter_anrqj")
nodes/fragment/30/position = Vector2(-520, 480)
nodes/fragment/32/node = SubResource("VisualShaderNodeVectorCompose_3w723")
nodes/fragment/32/position = Vector2(-960, 280)
nodes/fragment/35/node = SubResource("VisualShaderNodeBooleanParameter_3hrni")
nodes/fragment/35/position = Vector2(-1500, -280)
nodes/fragment/36/node = SubResource("VisualShaderNodeVectorFunc_sy3w3")
nodes/fragment/36/position = Vector2(-1300, -60)
nodes/fragment/37/node = SubResource("VisualShaderNodeSwitch_si863")
nodes/fragment/37/position = Vector2(-1020, -20)
nodes/fragment/38/node = SubResource("VisualShaderNodeFloatParameter_2lm10")
nodes/fragment/38/position = Vector2(-1380, 280)
nodes/fragment/39/node = SubResource("VisualShaderNodeSwitch_2ma3x")
nodes/fragment/39/position = Vector2(-420, -220)
nodes/fragment/40/node = SubResource("VisualShaderNodeColorConstant_e28fg")
nodes/fragment/40/position = Vector2(-740, -260)
nodes/fragment/41/node = SubResource("VisualShaderNodeColorConstant_uf0bo")
nodes/fragment/41/position = Vector2(-800, -120)
nodes/fragment/connections = PackedInt32Array(7, 0, 8, 0, 11, 0, 10, 0, 10, 0, 7, 0, 13, 0, 11, 0, 15, 0, 7, 1, 16, 1, 17, 1, 16, 3, 15, 1, 16, 2, 3, 2, 8, 0, 0, 0, 22, 0, 14, 0, 3, 0, 8, 1, 17, 0, 0, 1, 14, 1, 11, 1, 14, 1, 15, 0, 14, 2, 3, 0, 26, 0, 14, 2, 27, 0, 24, 1, 28, 0, 27, 1, 29, 0, 13, 0, 29, 0, 10, 1, 14, 3, 17, 0, 30, 0, 16, 2, 23, 0, 27, 0, 32, 0, 22, 1, 24, 0, 22, 2, 20, 0, 36, 0, 35, 0, 37, 0, 37, 0, 22, 0, 37, 0, 16, 0, 38, 0, 32, 1, 36, 0, 37, 1, 20, 0, 37, 2, 35, 0, 39, 0, 40, 0, 39, 1, 41, 0, 39, 2, 39, 0, 13, 0, 39, 0, 10, 1)
